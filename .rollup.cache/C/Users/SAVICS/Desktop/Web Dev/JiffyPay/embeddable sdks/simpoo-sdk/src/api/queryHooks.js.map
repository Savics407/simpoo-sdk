{"version":3,"file":"queryHooks.js","sourceRoot":"","sources":["queryHooks.ts"],"names":[],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from \"@tanstack/react-query\";\r\nimport { toast } from \"sonner\";\r\nimport { createApiClient } from \"./client\";\r\nimport { useSDK } from \"../context/SimpooProvider\";\r\n\r\ntype CustomError = {\r\n  response?: {\r\n    data?: {\r\n      message?: string;\r\n    };\r\n    status?: number;\r\n    statusText?: string;\r\n  };\r\n  request?: any; // You can adjust this type as needed\r\n  message?: string;\r\n};\r\n\r\nexport const useFetchData = (key: Array<string>, url: string, options = {}) => {\r\n  const { apiKey } = useSDK();\r\n  const api = createApiClient(apiKey || \"\");\r\n\r\n  const fetchData = async (url: any) => {\r\n    try {\r\n      const { data } = await api.get(url);\r\n      return data as any;\r\n    } catch (error) {\r\n      handleAxiosError(error as CustomError);\r\n    }\r\n  };\r\n\r\n  return useQuery({\r\n    queryKey: key,\r\n    queryFn: () => fetchData(url),\r\n    ...options,\r\n  });\r\n};\r\n\r\nexport const useDeleteData = (options = {}) => {\r\n  const { apiKey } = useSDK();\r\n  const api = createApiClient(apiKey || \"\");\r\n\r\n  const deleteData = async ({\r\n    url,\r\n    payload,\r\n  }: {\r\n    url: string;\r\n    payload?: any;\r\n  }) => {\r\n    const { data } = await api.delete(url, payload);\r\n    return data;\r\n  };\r\n\r\n  return useMutation({\r\n    mutationFn: deleteData,\r\n    onSuccess(data: any, variables, context) {\r\n      toast.success(data.message);\r\n    },\r\n    onError(error, variables, context) {\r\n      handleAxiosError(error);\r\n    },\r\n    ...options,\r\n  });\r\n};\r\n\r\nexport const usePostData = (\r\n  options = { enableToast: true },\r\n  formData?: boolean,\r\n  download?: boolean\r\n) => {\r\n  const { enableToast, ...restOptions } = options;\r\n  const { apiKey } = useSDK();\r\n  const api = createApiClient(apiKey || \"\");\r\n\r\n  const postFormData = async ({\r\n    url,\r\n    payload,\r\n  }: {\r\n    url: string;\r\n    payload?: any;\r\n  }) => {\r\n    const { data } = await api.post(url, payload, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const postData = async ({ url, payload }: { url: string; payload?: any }) => {\r\n    const { data } = await api.post(url, payload);\r\n    return data;\r\n  };\r\n\r\n  return useMutation({\r\n    mutationFn: formData ? postFormData : postData,\r\n    onSuccess(data: any, variables, context) {\r\n      if (enableToast) {\r\n        toast.success(data.message);\r\n      }\r\n    },\r\n    onError(error, variables, context) {\r\n      console.log(error);\r\n      handleAxiosError(error);\r\n    },\r\n    ...restOptions,\r\n  });\r\n};\r\n\r\nexport const handleAxiosError = (error: CustomError) => {\r\n  if (error?.response) {\r\n    console.log(\"response data:\", error.response.data);\r\n    console.log(\"Status Code:\", error.response.status);\r\n    console.log(\"Status Text:\", error.response.statusText);\r\n\r\n    // Check for 500 status and throw custom error message\r\n\r\n    if (error.response.status === 500) {\r\n      toast.error(`Something went wrong`, {\r\n        position: \"top-right\",\r\n      });\r\n    } else if (error.response.data && error.response.data.message) {\r\n      toast.error(`${error.response?.data?.message}`, {\r\n        position: \"top-right\",\r\n      });\r\n    }\r\n  } else if (error.request) {\r\n    console.log(error?.message);\r\n    toast.error(`${error?.message}`, {\r\n      position: \"top-right\",\r\n    });\r\n  } else {\r\n    console.log(error?.message);\r\n    toast.error(`${error?.message}`, {\r\n      position: \"top-right\",\r\n    });\r\n  }\r\n};\r\n"]}