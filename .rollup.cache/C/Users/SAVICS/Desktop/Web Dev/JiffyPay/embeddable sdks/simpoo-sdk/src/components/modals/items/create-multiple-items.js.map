{"version":3,"file":"create-multiple-items.js","sourceRoot":"","sources":["create-multiple-items.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useQueryClient } from \"@tanstack/react-query\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { RootState } from \"../../../store\";\r\nimport { useFetchData, usePostData } from \"../../../api/queryHooks\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ModalLayout from \"../../layouts/modal-layout\";\r\nimport Select from \"../../atoms/simpoo-select\";\r\nimport { CategorySelector } from \"../../atoms/category-selection\";\r\nimport { MultipleSelector } from \"../../atoms/multiSelect\";\r\nimport Input from \"../../atoms/input\";\r\nimport Button from \"../../atoms/button\";\r\nimport { icons } from \"../../../assets/icons\";\r\nimport { useSDK } from \"../../../context/SimpooProvider\";\r\n\r\nfunction CreateMuiltipleItems({\r\n  isOpen,\r\n  onClose,\r\n}: {\r\n  isOpen: boolean;\r\n  onClose?: () => void;\r\n}) {\r\n  const { mutate, isPending } = usePostData();\r\n  const queryClient = useQueryClient();\r\n  const { apiKey } = useSDK();\r\n\r\n  const { data: categories } = useFetchData(\r\n    [`categories`, apiKey],\r\n    `/outbound/inventory_metas/categories`,\r\n    {\r\n      enabled: !!apiKey,\r\n    }\r\n  );\r\n\r\n  const { data: itemUnits } = useFetchData(\r\n    [`itemunits`, apiKey],\r\n    `/outbound/inventory_metas/units`,\r\n    {\r\n      enabled: !!apiKey,\r\n    }\r\n  );\r\n\r\n  const { data: itemTags } = useFetchData(\r\n    [`itemtags`, apiKey],\r\n    `/outbound/inventory_metas/tags`,\r\n    {\r\n      enabled: !!apiKey,\r\n    }\r\n  );\r\n\r\n  const { data: itemTypes } = useFetchData(\r\n    [`itemtypes`, apiKey],\r\n    `/outbound/inventory_metas/types`,\r\n    {\r\n      enabled: !!apiKey,\r\n    }\r\n  );\r\n\r\n  const category =\r\n    categories?.data?.data?.map((category: ItemCategory) => {\r\n      return {\r\n        label: category.name,\r\n        value: category.uuid,\r\n        subOptions: category.subCategories.map((sub) => {\r\n          return {\r\n            label: sub.name,\r\n            value: sub.uuid,\r\n          };\r\n        }),\r\n      };\r\n    }) || [];\r\n\r\n  const itemUnit =\r\n    itemUnits?.data?.data?.map((unit: ItemUnit) => {\r\n      return {\r\n        label: unit.name,\r\n        value: unit.uuid,\r\n      };\r\n    }) || [];\r\n\r\n  const itemTag = itemTags?.data?.data?.map(\r\n    (unit: { name: string; uuid: string }) => {\r\n      return {\r\n        label: unit.name,\r\n        value: unit.uuid,\r\n      };\r\n    }\r\n  );\r\n\r\n  const itemTypesList =\r\n    itemTypes?.data?.data\r\n      ?.filter(\r\n        (type: ItemType) => type.name === \"products\" || type.name === \"services\"\r\n      )\r\n      .map((type: ItemType) => {\r\n        return {\r\n          label: type.name,\r\n          value: type.uuid,\r\n        };\r\n      }) || [];\r\n\r\n  const [selectedTypeName, setSelectedTypeName] = useState(\"\");\r\n\r\n  const [selectedCategories, setSelectedCategories] = React.useState<string[]>(\r\n    []\r\n  );\r\n\r\n  const [selectedTypes, setSelectedTypes] = useState<string>(\r\n    itemTypesList?.[0]?.value || \"\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    const label =\r\n      itemTypesList.find((type: any) => type?.value === selectedTypes)?.label ||\r\n      \"\";\r\n\r\n    setSelectedTypeName(label);\r\n  }, [selectedTypes]);\r\n\r\n  const [selectedTag, setSelectedTag] = useState<string[]>([]);\r\n  // const [names, setNames] = useState<Array<string>>([]);\r\n  const [items, setItems] = useState<\r\n    {\r\n      name: string;\r\n      itemunit_id: string;\r\n      quantity: string;\r\n      cost_price: string;\r\n      selling_price: string;\r\n      barcode: string;\r\n    }[]\r\n  >([\r\n    {\r\n      name: \"\",\r\n      itemunit_id: itemUnit?.[0]?.value || \"\",\r\n      quantity: \"\",\r\n      cost_price: \"\",\r\n      selling_price: \"\",\r\n      barcode: \"\",\r\n    },\r\n  ]);\r\n\r\n  const updateItemFields = (\r\n    name: string,\r\n    value: string | number,\r\n    index: number\r\n  ) => {\r\n    const updatedItemFields = [...items];\r\n    updatedItemFields[index] = {\r\n      ...updatedItemFields[index],\r\n      [name]: value,\r\n    };\r\n    setItems(updatedItemFields);\r\n  };\r\n\r\n  const addField = () => {\r\n    setItems((prev) => [\r\n      ...prev,\r\n      {\r\n        name: \"\",\r\n        itemunit_id: itemUnit?.[0]?.value || \"\",\r\n        quantity: \"\",\r\n        cost_price: \"\",\r\n        selling_price: \"\",\r\n        barcode: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const removeItem = (index: number) => {\r\n    const updatedItems = items.filter((_, id) => id !== index);\r\n    setItems(updatedItems);\r\n  };\r\n\r\n  const storeMultiple = {\r\n    itemtype_id: selectedTypes,\r\n    itemcategory_id: selectedCategories,\r\n    tags: selectedTag,\r\n    items: items,\r\n  };\r\n\r\n  const createMultipleItems = () => {\r\n    mutate(\r\n      {\r\n        url: \"/outbound/items/create_multiple\",\r\n        payload: storeMultiple,\r\n      },\r\n      {\r\n        onSuccess: () => {\r\n          queryClient.invalidateQueries({ queryKey: [\"items\"] });\r\n          onClose && onClose();\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  const tableHead = [\r\n    \"Item name\",\r\n    \"Item unit\",\r\n    ...(selectedTypeName !== \"services\" ? [\"Quantity\", \"Barcode\"] : []),\r\n    \"Cost price (₦)\",\r\n    \"Selling price (₦)\",\r\n  ];\r\n\r\n  return (\r\n    <ModalLayout\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      title=\"Quick create multiple items\"\r\n      className=\"max-w-[1024px]\"\r\n    >\r\n      <div className=\"px-5 space-y-7 pb-5\">\r\n        {/* <div className=\"rounded-md py-4 px-3.5 bg-primary_light flex items-center gap-4\">\r\n          {icons.info}\r\n          <p className=\"text-dark text-sm font-medium\">\r\n            Type item names and separate them with comma.\r\n          </p>\r\n        </div> */}\r\n        {/* <TagInput label=\"Item names\" setTagArray={setNames} required /> */}\r\n        <div className=\"grid grid-cols-3 gap-5 bg-gray-100 rounded-xl p-4\">\r\n          <Select\r\n            label=\"Item type\"\r\n            options={itemTypesList}\r\n            placeholder=\"select item type\"\r\n            value={selectedTypes}\r\n            onValueChange={(value) => setSelectedTypes(value)}\r\n            required\r\n            info=\"Select the type of item you're creating (e.g., product, service, variations, kits ). This classification helps determine how the item is managed, displayed, or fulfilled.\"\r\n          />\r\n\r\n          <CategorySelector\r\n            placeholder=\"select categories\"\r\n            label=\"Category\"\r\n            options={category}\r\n            values={selectedCategories}\r\n            onChange={(values) => setSelectedCategories(values)}\r\n            showMultiSelectValues={false}\r\n            showCount\r\n            info=\"Select the category that best describes this item(s) (e.g., electronics, clothing, food). Categorizing items helps in organizing inventory and simplifies product management.\"\r\n          />\r\n\r\n          <MultipleSelector\r\n            label=\"Item tag\"\r\n            placeholder=\"Select item tags\"\r\n            info=\"Enter relevant keywords or labels for this item(s). Tags help in categorizing and making the item easier to find through search filters.\"\r\n            labelClass=\"text-dark text-sm\"\r\n            options={itemTag}\r\n            values={selectedTag}\r\n            onChange={setSelectedTag}\r\n            showSearch\r\n            showCount\r\n            showMultiSelectValues={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2 overflow-auto\">\r\n          <table className=\"table-auto w-full border-separate border-spacing-4\">\r\n            <thead>\r\n              <tr>\r\n                {tableHead.map((head, index) => (\r\n                  <th\r\n                    key={index}\r\n                    className=\"text-dark text-sm font-medium text-left\"\r\n                  >\r\n                    {head}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"text-dark text-[15px] \">\r\n              {items.map((item, index) => (\r\n                <tr key={index}>\r\n                  <td className=\"\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter item name\"\r\n                      value={item.name}\r\n                      onChange={(e) =>\r\n                        updateItemFields(\"name\", e.target.value, index)\r\n                      }\r\n                    />\r\n                  </td>\r\n\r\n                  <td>\r\n                    <Select\r\n                      options={itemUnit}\r\n                      placeholder=\"select item unit\"\r\n                      value={item.itemunit_id}\r\n                      onValueChange={(value) =>\r\n                        updateItemFields(\"itemunit_id\", value, index)\r\n                      }\r\n                    />\r\n                  </td>\r\n\r\n                  {selectedTypeName !== \"services\" ? (\r\n                    <>\r\n                      <td className=\"\">\r\n                        <Input\r\n                          type=\"number\"\r\n                          placeholder=\"0\"\r\n                          value={item.quantity}\r\n                          onChange={(e) =>\r\n                            updateItemFields(\"quantity\", e.target.value, index)\r\n                          }\r\n                        />\r\n                      </td>\r\n\r\n                      <td className=\"\">\r\n                        <Input\r\n                          type=\"number\"\r\n                          placeholder=\"Enter barcode\"\r\n                          value={item.barcode}\r\n                          onChange={(e) =>\r\n                            updateItemFields(\"barcode\", e.target.value, index)\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <td className=\"\">\r\n                    <Input\r\n                      type=\"number\"\r\n                      placeholder=\"0.00\"\r\n                      value={item.cost_price}\r\n                      onChange={(e) =>\r\n                        updateItemFields(\"cost_price\", e.target.value, index)\r\n                      }\r\n                    />\r\n                  </td>\r\n\r\n                  <td className=\"\">\r\n                    <Input\r\n                      type=\"number\"\r\n                      placeholder=\"0.00\"\r\n                      value={item.selling_price}\r\n                      onChange={(e) =>\r\n                        updateItemFields(\"selling_price\", e.target.value, index)\r\n                      }\r\n                    />\r\n                  </td>\r\n\r\n                  <td className=\"\">\r\n                    <button\r\n                      onClick={() => removeItem(index)}\r\n                      disabled={items.length === 1}\r\n                      className=\"disabled:cursor-not-allowed disabled:opacity-70\"\r\n                    >\r\n                      {icons.trash2}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            mode={\"text\"}\r\n            label={\"Add more\"}\r\n            left_addon={icons.plus_squared2}\r\n            onClick={addField}\r\n            className=\"font-medium text-sm ml-4\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex justify-between items-center px-5 sticky bottom-0 bg-white py-5 border-t \">\r\n        <button className=\"text-primary text-sm font-medium flex items-center gap-1\">\r\n          {icons.question} Need help?\r\n        </button>\r\n        <div className=\"flex justify-end gap-2.5\">\r\n          <Button\r\n            label=\"Cancel\"\r\n            className=\"bg-[#F1F1F2] text-[#181C32] hover:bg-[#F1F1F2]/90\"\r\n            onClick={onClose}\r\n          />\r\n          <Button\r\n            label=\"Create Items\"\r\n            onClick={createMultipleItems}\r\n            loading={isPending}\r\n          />\r\n        </div>\r\n      </div>\r\n    </ModalLayout>\r\n  );\r\n}\r\n\r\nexport default CreateMuiltipleItems;\r\n"]}