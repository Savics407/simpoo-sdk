{"version":3,"file":"simpoo-select.js","sourceRoot":"","sources":["simpoo-select.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAc,EAAa,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAEtE,OAAO,EACL,OAAO,EACP,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,WAAW,EACX,WAAW,GACZ,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAExE,OAAO,EAAE,KAAK,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AACrD,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,EAAE,EAAE,MAAM,iBAAiB,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAC;AACtC,OAAO,QAAQ,MAAM,YAAY,CAAC;AASlC,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,OAAkB,EAAE,WAAmB,EAAE,EAAE;IACtE,MAAM,UAAU,GAAG,OAAO,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE;QAC5C,IAAI,OAAO,MAAM,CAAC,KAAK,KAAK,QAAQ,EAAE,CAAC;YACrC,OAAO,MAAM,CAAC,KAAK,EAAE,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC;QACzE,CAAC;aAAM,CAAC;YACN,OAAO,CACL,MAAM,CAAC,KAAK,EAAE,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;gBAC/D,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CACpE,CAAC;QACJ,CAAC;IACH,CAAC,CAAC,CAAC;IACH,OAAO,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC;AAC5C,CAAC,CAAC;AAgCF,MAAM,MAAM,GAAG,CAAC,EACd,KAAK,EACL,OAAO,GAAG,EAAE,EACZ,SAAS,EACT,WAAW,EACX,KAAK,GAAG,EAAE,EACV,aAAa,EACb,QAAQ,EACR,KAAK,EACL,UAAU,GAAG,IAAI,EACjB,WAAW,GAAG,IAAI,EAClB,IAAI,EACJ,IAAI,EACJ,QAAQ,EACR,UAAU,EACV,WAAW,EACX,iBAAiB,EACjB,eAAe,EACf,iBAAiB,EACjB,QAAQ,EACR,YAAY,EACZ,OAAO,EACP,SAAS,EACT,cAAc,EACd,SAAS,EACT,aAAa,EACb,KAAK,GAAG,OAAO,EACf,UAAU,GACE,EAAE,EAAE;IAChB,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;IACnD,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IACxC,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IAClD,MAAM,SAAS,GAAG,MAAM,CAAoB,IAAI,CAAC,CAAC;IAElD,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,WAAW,GAAG,GAAG,EAAE;YACvB,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC;gBACtB,cAAc,CAAC,SAAS,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;YAClD,CAAC;QACH,CAAC,CAAC;QAEF,WAAW,EAAE,CAAC;QAEd,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QAE/C,OAAO,GAAG,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;IACjE,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,cAAc,GAAG,CAAC,KAAa,EAAE,EAAE;QACvC,MAAM,MAAM,GAAG,OAAO,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;QACjE,OAAO,MAAM,EAAE,KAAK,CAAC;IACvB,CAAC,CAAC;IACF,OAAO,CACL,4BACG,OAAO,CAAC,CAAC,CAAC,CACT,KAAC,QAAQ,IAAC,SAAS,EAAC,iBAAiB,GAAG,CACzC,CAAC,CAAC,CAAC,CACF,eAAK,SAAS,EAAE,EAAE,CAAC,uBAAuB,EAAE,SAAS,CAAC,aACpD,eACE,SAAS,EAAE,EAAE,CACX,sCAAsC,EACtC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CACxB,aAEA,KAAK,IAAI,CACR,iBACE,SAAS,EAAE,EAAE,CACX,+EAA+E,EAC/E,UAAU,CACX,aAED,eAAM,SAAS,EAAC,sBAAsB,YAAE,KAAK,GAAQ,EAAC,GAAG,EACxD,QAAQ,CAAC,CAAC,CAAC,CACV,eAAM,SAAS,EAAC,gBAAgB,YAAE,KAAK,IAAI,GAAG,GAAQ,CACvD,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CACb,eAAM,SAAS,EAAC,4BAA4B,2BAAkB,CAC/D,CAAC,CAAC,CAAC,IAAI,EACP,IAAI,IAAI,CACP,KAAC,QAAQ,IAAC,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,YAC9C,YAAG,SAAS,EAAC,oCAAoC,YAAE,IAAI,GAAK,GACnD,CACZ,IACK,CACT,EACA,WAAW,IAAI,CACd,kBACE,OAAO,EAAE,iBAAiB,EAC1B,SAAS,EAAC,iFAAiF,aAE1F,WAAW,EACX,eAAe,IAAI,CAClB,KAAC,QAAQ,IAAC,SAAS,EAAE,WAAW,YAC9B,YAAG,SAAS,EAAC,8CAA8C,YACxD,eAAe,GACd,GACK,CACZ,IACM,CACV,IACG,EACN,MAAC,OAAO,IAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,aACrD,KAAC,cAAc,IAAC,OAAO,kBACrB,MAAC,MAAM,IACL,GAAG,EAAE,SAAS,EACd,OAAO,EAAC,SAAS,EACjB,IAAI,EAAC,UAAU,mBACA,IAAI,EACnB,SAAS,EAAE,EAAE,CACX,iIACE,CAAC,KAAK,IAAI,SAAS,CAAC,IAAI,gBAC1B,EAAE,EACF,YAAY,CACb,EACD,QAAQ,EAAE,QAAQ,aAElB,eACE,SAAS,EAAE,EAAE,CACX,oFAAoF,EACpF,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,EAC1B,UAAU,CACX,YAEA,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,IAAI,WAAW,GACtD,EACP,KAAC,cAAc,IAAC,SAAS,EAAC,kCAAkC,GAAG,IACxD,GACM,EACjB,KAAC,cAAc,IACb,KAAK,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,EAC7B,SAAS,EAAC,uDAAuD,EACjE,KAAK,EAAE,KAAK,YAEZ,MAAC,OAAO,IAAC,SAAS,EAAC,QAAQ,aACxB,UAAU,IAAI,CACb,KAAC,YAAY,IACX,eAAe,EAAE,cAAc,EAC/B,SAAS,EAAC,qBAAqB,EAC/B,WAAW,EAAE,iBAAiB,IAAI,WAAW,GAC7C,CACH,EACA,SAAS,CAAC,CAAC,CAAC,CACX,cAAK,SAAS,EAAC,yBAAyB,YACrC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAC3B,KAAC,QAAQ,IAAa,SAAS,EAAC,gBAAgB,IAAjC,KAAK,CAA+B,CACpD,CAAC,GACE,CACP,CAAC,CAAC,CAAC,CACF,KAAC,YAAY,mCAAgC,CAC9C,EAED,KAAC,YAAY,cACX,KAAC,WAAW,IAAC,SAAS,EAAC,EAAE,YACtB,OAAO,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CACxB,MAAC,WAAW,IAMV,KAAK,EACH,OAAO,MAAM,CAAC,KAAK,KAAK,QAAQ;oDAC9B,CAAC,CAAC,MAAM,CAAC,KAAK;oDACd,CAAC,CAAC,MAAM,EAAE,QAAQ,EAEtB,SAAS,EAAE,0JACT,KAAK,KAAK,MAAM,CAAC,KAAK;oDACtB,+BACF,EAAE,EACF,QAAQ,EAAE,GAAG,EAAE;oDACb,IAAI,aAAa;wDAAE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oDAC/C,OAAO,CAAC,KAAK,CAAC,CAAC;gDACjB,CAAC,aAED,KAAC,KAAK,IACJ,SAAS,EAAE,EAAE,CACX,cAAc,EACd,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,CACrD,GACD,EACD,MAAM,CAAC,KAAK,KAzBR,GACH,OAAO,MAAM,CAAC,KAAK,KAAK,QAAQ;gDAC9B,CAAC,CAAC,MAAM,CAAC,KAAK;gDACd,CAAC,CAAC,MAAM,EAAE,QACd,GAAG,MAAM,CAAC,KAAK,EAAE,CAsBL,CACf,CAAC,GACU,GACD,IACP,GACK,IACT,EAET,KAAK,IAAI,YAAG,SAAS,EAAC,iCAAiC,YAAE,KAAK,GAAK,IAChE,CACP,GACA,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["\"use client\";\r\n\r\nimport React, { ReactNode, useEffect, useRef, useState } from \"react\";\r\n\r\nimport {\r\n  Command,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandInput,\r\n  CommandItem,\r\n  CommandList,\r\n} from \"../ui/command\";\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"../ui/popover\";\r\n\r\nimport { Check, ChevronsUpDown } from \"lucide-react\";\r\nimport { Skeleton } from \"../ui/skeleton\";\r\nimport { cn } from \"../../lib/utils\";\r\nimport { Button } from \"../ui/button\";\r\nimport InfoCard from \"./InfoCard\";\r\n\r\nexport interface IOption {\r\n  label: string | ReactNode;\r\n  value: string;\r\n  searchId?: string;\r\n  subOptions?: IOption[];\r\n}\r\n\r\nexport const handleSearch = (options: IOption[], searchQuery: string) => {\r\n  const searchData = options?.filter((option) => {\r\n    if (typeof option.label === \"string\") {\r\n      return option.label?.toLowerCase().includes(searchQuery.toLowerCase());\r\n    } else {\r\n      return (\r\n        option.value?.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        option?.searchId?.toLowerCase().includes(searchQuery.toLowerCase())\r\n      );\r\n    }\r\n  });\r\n  return searchQuery ? searchData : options;\r\n};\r\n\r\nexport interface SelectProps {\r\n  options?: IOption[];\r\n  className?: string;\r\n  placeholder?: string;\r\n  label?: string;\r\n  value?: string;\r\n  onValueChange?: (value: string) => void;\r\n  required?: boolean;\r\n  optional?: boolean;\r\n  error?: string;\r\n  showSearch?: boolean;\r\n  icon?: ReactNode;\r\n  showOutline?: boolean;\r\n  info?: string;\r\n  labelClass?: string;\r\n  actionLabel?: string;\r\n  actionLabelAction?: () => void;\r\n  actionLabelInfo?: string;\r\n  searchPlaceholder?: string;\r\n  showMultiSelectValues?: boolean;\r\n  disabled?: boolean;\r\n  triggerClass?: string;\r\n  loading?: boolean;\r\n  showError?: boolean;\r\n  onChangeSearch?: React.InputHTMLAttributes<HTMLInputElement>[\"onChange\"];\r\n  searching?: boolean;\r\n  infoAlignment?: \"start\" | \"center\" | \"end\";\r\n  align?: \"start\" | \"center\" | \"end\";\r\n  valueClass?: string;\r\n}\r\nconst Select = ({\r\n  label,\r\n  options = [],\r\n  className,\r\n  placeholder,\r\n  value = \"\",\r\n  onValueChange,\r\n  required,\r\n  error,\r\n  showSearch = true,\r\n  showOutline = true,\r\n  icon,\r\n  info,\r\n  optional,\r\n  labelClass,\r\n  actionLabel,\r\n  actionLabelAction,\r\n  actionLabelInfo,\r\n  searchPlaceholder,\r\n  disabled,\r\n  triggerClass,\r\n  loading,\r\n  showError,\r\n  onChangeSearch,\r\n  searching,\r\n  infoAlignment,\r\n  align = \"start\",\r\n  valueClass,\r\n}: SelectProps) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [sourceWidth, setSourceWidth] = useState(0);\r\n  const sourceRef = useRef<HTMLButtonElement>(null);\r\n\r\n  useEffect(() => {\r\n    const updateWidth = () => {\r\n      if (sourceRef.current) {\r\n        setSourceWidth(sourceRef?.current?.offsetWidth);\r\n      }\r\n    };\r\n\r\n    updateWidth();\r\n\r\n    window.addEventListener(\"resize\", updateWidth);\r\n\r\n    return () => window.removeEventListener(\"resize\", updateWidth);\r\n  }, []);\r\n\r\n  const findValueTitle = (value: string) => {\r\n    const result = options?.find((option) => option.value === value);\r\n    return result?.label;\r\n  };\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Skeleton className=\"w-full h-[48px]\" />\r\n      ) : (\r\n        <div className={cn(\"flex flex-col gap-2.5\", className)}>\r\n          <div\r\n            className={cn(\r\n              \"flex justify-between gap-2 flex-wrap\",\r\n              label ? null : \"hidden\"\r\n            )}\r\n          >\r\n            {label && (\r\n              <label\r\n                className={cn(\r\n                  \"text-black flex items-center gap-1 first-letter:uppercase text-sm font-medium\",\r\n                  labelClass\r\n                )}\r\n              >\r\n                <span className=\"first-letter:inherit\">{label}</span>{\" \"}\r\n                {required ? (\r\n                  <span className=\"text-[#E12D39]\">{label && \"*\"}</span>\r\n                ) : optional ? (\r\n                  <span className=\"text-[#B5B5B5] font-normal\">(optional)</span>\r\n                ) : null}\r\n                {info && (\r\n                  <InfoCard fieldName={label} align={infoAlignment}>\r\n                    <p className=\"font-normal first-letter:uppercase\">{info}</p>\r\n                  </InfoCard>\r\n                )}\r\n              </label>\r\n            )}\r\n            {actionLabel && (\r\n              <button\r\n                onClick={actionLabelAction}\r\n                className=\"text-primary flex items-center gap-1 first-letter:uppercase text-sm font-medium\"\r\n              >\r\n                {actionLabel}\r\n                {actionLabelInfo && (\r\n                  <InfoCard fieldName={actionLabel}>\r\n                    <p className=\"font-normal first-letter:uppercase text-left\">\r\n                      {actionLabelInfo}\r\n                    </p>\r\n                  </InfoCard>\r\n                )}\r\n              </button>\r\n            )}\r\n          </div>\r\n          <Popover modal={true} open={open} onOpenChange={setOpen}>\r\n            <PopoverTrigger asChild>\r\n              <Button\r\n                ref={sourceRef}\r\n                variant=\"outline\"\r\n                role=\"combobox\"\r\n                aria-expanded={open}\r\n                className={cn(\r\n                  `w-full h-[48px] justify-between border focus:border-primary border-neutral-200 bg-white hover:bg-white hover:border-[#BFD7FE] ${\r\n                    (error || showError) && \"!border-danger\"\r\n                  }`,\r\n                  triggerClass\r\n                )}\r\n                disabled={disabled}\r\n              >\r\n                <span\r\n                  className={cn(\r\n                    \"flex gap-2 first-letter:uppercase capitalize text-[#5E6278] justify-start truncate\",\r\n                    value ? \"text-dark\" : null,\r\n                    valueClass\r\n                  )}\r\n                >\r\n                  {value ? findValueTitle(value) : placeholder ?? \"Select...\"}\r\n                </span>\r\n                <ChevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\r\n              </Button>\r\n            </PopoverTrigger>\r\n            <PopoverContent\r\n              style={{ width: sourceWidth }}\r\n              className=\"min-w-[280px] p-0 bg-white rounded-xl border-gray-200\"\r\n              align={align}\r\n            >\r\n              <Command className=\"w-full\">\r\n                {showSearch && (\r\n                  <CommandInput\r\n                    onChangeCapture={onChangeSearch}\r\n                    className=\"placeholder:text-xs\"\r\n                    placeholder={searchPlaceholder ?? \"Search...\"}\r\n                  />\r\n                )}\r\n                {searching ? (\r\n                  <div className=\"flex flex-col gap-2 p-2\">\r\n                    {[1, 2, 3].map((_, index) => (\r\n                      <Skeleton key={index} className=\"h-9 rounded-md\" />\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <CommandEmpty>No result found.</CommandEmpty>\r\n                )}\r\n\r\n                <CommandGroup>\r\n                  <CommandList className=\"\">\r\n                    {options?.map((option) => (\r\n                      <CommandItem\r\n                        key={`${\r\n                          typeof option.label === \"string\"\r\n                            ? option.label\r\n                            : option?.searchId\r\n                        }${option.value}`}\r\n                        value={\r\n                          typeof option.label === \"string\"\r\n                            ? option.label\r\n                            : option?.searchId\r\n                        }\r\n                        className={`first-letter:uppercase capitalize mb-1 hover:bg-primary_light w-full rounded-md  hover:text-primary font-semibold text-gray-700 text-sm cursor-pointer ${\r\n                          value === option.value &&\r\n                          \"bg-primary_light text-primary\"\r\n                        }`}\r\n                        onSelect={() => {\r\n                          if (onValueChange) onValueChange(option.value);\r\n                          setOpen(false);\r\n                        }}\r\n                      >\r\n                        <Check\r\n                          className={cn(\r\n                            \"mr-2 h-4 w-4\",\r\n                            value === option.value ? \"opacity-100\" : \"opacity-0\"\r\n                          )}\r\n                        />\r\n                        {option.label}\r\n                      </CommandItem>\r\n                    ))}\r\n                  </CommandList>\r\n                </CommandGroup>\r\n              </Command>\r\n            </PopoverContent>\r\n          </Popover>\r\n\r\n          {error && <p className=\"text-danger text-xs font-normal\">{error}</p>}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n"]}