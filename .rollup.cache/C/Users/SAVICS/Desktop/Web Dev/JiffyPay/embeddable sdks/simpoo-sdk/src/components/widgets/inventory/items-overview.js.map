{"version":3,"file":"items-overview.js","sourceRoot":"","sources":["items-overview.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Meta } from \"../../molecule/pagination-component\";\r\nimport { icons } from \"../../../assets/icons\";\r\nimport { formatToCurrency } from \"../../../store/actions/utility\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from \"../../ui/dropdown-menu\";\r\nimport { cn } from \"../../../lib/utils\";\r\nimport Container from \"../../atoms/container\";\r\nimport { Skeleton } from \"../../ui/skeleton\";\r\nimport { Collapse } from \"react-collapse\";\r\n\r\ninterface Overview {\r\n  default: string;\r\n  result_array: {\r\n    [key: string]: {\r\n      pricegroup: string;\r\n      total_profit: number;\r\n      total_cost: number;\r\n      total_selling_price: number;\r\n    };\r\n  };\r\n  otherscount: {\r\n    uuid: string;\r\n    name: string;\r\n    default: boolean;\r\n  }[];\r\n  unit_count: number;\r\n}\r\n\r\nfunction ItemsOverview({\r\n  loading,\r\n  data,\r\n  meta,\r\n}: {\r\n  loading: boolean;\r\n  data: Overview;\r\n  meta: Meta;\r\n}) {\r\n  const otherSellingPrices = data?.otherscount?.map((other) => {\r\n    const othername = other.name;\r\n\r\n    return {\r\n      type: othername,\r\n      value: data?.result_array?.[othername]?.total_selling_price ?? 0,\r\n    };\r\n  });\r\n\r\n  const totalSellingPrice = [\r\n    {\r\n      type: data?.result_array?.Retail?.pricegroup ?? data?.default,\r\n      value: data?.result_array?.Retail?.total_selling_price ?? 0,\r\n    },\r\n    ...(otherSellingPrices || []),\r\n  ];\r\n\r\n  const otherProfits = data?.otherscount?.map((other) => {\r\n    const othername = other.name;\r\n    return {\r\n      type: othername,\r\n      value: data?.result_array?.[othername]?.total_profit ?? 0,\r\n    };\r\n  });\r\n\r\n  const profitToBeMade = [\r\n    {\r\n      type: data?.result_array?.Retail?.pricegroup ?? data?.default,\r\n      value: data?.result_array?.Retail?.total_profit ?? 0,\r\n    },\r\n    ...(otherProfits || []),\r\n  ];\r\n\r\n  const [sellingPrice, setSellingPrice] = useState({\r\n    type: totalSellingPrice?.[0].type,\r\n    value: totalSellingPrice?.[0].value,\r\n  });\r\n\r\n  const [profit, setProfit] = useState({\r\n    type: profitToBeMade?.[0].type,\r\n    value: profitToBeMade?.[0].value,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    setSellingPrice({\r\n      type: totalSellingPrice?.[0].type,\r\n      value: totalSellingPrice?.[0].value,\r\n    });\r\n\r\n    setProfit({\r\n      type: profitToBeMade?.[0].type,\r\n      value: profitToBeMade?.[0].value,\r\n    });\r\n  }, [loading]);\r\n\r\n  const kpis = [\r\n    {\r\n      label: \"Total No. of Unique Item\",\r\n      count: Intl.NumberFormat().format(meta?.total ?? 0),\r\n      desc: `With ${data?.unit_count ?? 0} unit(s)`,\r\n      icon: (\r\n        <div className=\"shrink-0 rounded-lg bg-[#EFF5FF] w-12 h-12 flex items-center justify-center border border-[#EDEEF1]\">\r\n          {icons.cube}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      label: \"Total Cost Price\",\r\n      count: formatToCurrency(data?.result_array?.Retail?.total_cost ?? 0),\r\n      desc: \"Takes into Account FIFO & LIFO \",\r\n      icon: (\r\n        <div className=\"shrink-0 rounded-lg bg-[#F9DFDD] w-12 h-12 flex items-center justify-center border border-[#EDEEF1]\">\r\n          {React.cloneElement(icons.price_tag, {\r\n            fill: \"#ED7400\",\r\n          })}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      label: \"Total Selling Price\",\r\n      count: formatToCurrency(sellingPrice.value),\r\n      desc: (\r\n        <p className=\"flex gap-2 items-center flex-wrap\">\r\n          Showing {sellingPrice.type} price{\" \"}\r\n          <DropdownMenu>\r\n            <DropdownMenuTrigger asChild>\r\n              <button className=\"rounded-lg h-8 flex items-center justify-between p-3 font-semibold text-xs text-gray-600 outline-none border border-gray-300 gap-2.5 capitalize bg-[#F9F9F9]\">\r\n                change\r\n                <span className=\"rotate-90\">{icons.arrow}</span>\r\n              </button>\r\n            </DropdownMenuTrigger>\r\n            <DropdownMenuContent\r\n              align=\"start\"\r\n              className=\"flex flex-col gap-2.5 rounded-xl border-gray-200 py-2.5 w-[210px]\"\r\n            >\r\n              {totalSellingPrice.map((value, dindex) => (\r\n                <DropdownMenuItem\r\n                  key={dindex}\r\n                  className={cn(\r\n                    `capitalize focus:bg-primary_light rounded-md focus:text-primary font-semibold  text-sm cursor-pointer px-[15px] flex items-center gap-[5px] \r\n                      \r\n                       `,\r\n                    value.type === sellingPrice.type\r\n                      ? \"bg-primary_light text-primary\"\r\n                      : null\r\n                  )}\r\n                  onClick={() =>\r\n                    setSellingPrice((prevData) => ({\r\n                      ...prevData,\r\n                      value: value.value,\r\n                      type: value.type,\r\n                    }))\r\n                  }\r\n                >\r\n                  {value.type}\r\n                </DropdownMenuItem>\r\n              ))}\r\n            </DropdownMenuContent>\r\n          </DropdownMenu>\r\n        </p>\r\n      ),\r\n      icon: (\r\n        <div className=\"shrink-0 rounded-lg bg-[#D8CDF4] w-12 h-12 flex items-center justify-center border border-[#EDEEF1]\">\r\n          {React.cloneElement(icons.price_tag, {\r\n            fill: \"#9747FF\",\r\n          })}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      label: \"Profit to be made\",\r\n      count: formatToCurrency(profit.value),\r\n      desc: (\r\n        <p className=\"flex gap-2 items-center flex-wrap\">\r\n          Showing {profit.type} price{\" \"}\r\n          <DropdownMenu>\r\n            <DropdownMenuTrigger asChild>\r\n              <button className=\"rounded-lg h-8 flex items-center justify-between p-3 font-semibold text-xs text-gray-600 outline-none border border-gray-300 gap-2.5 capitalize bg-[#F9F9F9]\">\r\n                change\r\n                <span className=\"rotate-90\">{icons.arrow}</span>\r\n              </button>\r\n            </DropdownMenuTrigger>\r\n            <DropdownMenuContent\r\n              align=\"start\"\r\n              className=\"flex flex-col gap-2.5 rounded-xl border-gray-200 py-2.5 w-[210px]\"\r\n            >\r\n              {profitToBeMade.map((value, dindex) => (\r\n                <DropdownMenuItem\r\n                  key={dindex}\r\n                  className={cn(\r\n                    `capitalize focus:bg-primary_light rounded-md focus:text-primary font-semibold  text-sm cursor-pointer px-[15px] flex items-center gap-[5px] \r\n                      \r\n                       `,\r\n                    value.type === profit.type\r\n                      ? \"bg-primary_light text-primary\"\r\n                      : null\r\n                  )}\r\n                  onClick={() =>\r\n                    setProfit((prevData) => ({\r\n                      ...prevData,\r\n                      value: value.value,\r\n                      type: value.type,\r\n                    }))\r\n                  }\r\n                >\r\n                  {value.type}\r\n                </DropdownMenuItem>\r\n              ))}\r\n            </DropdownMenuContent>\r\n          </DropdownMenu>\r\n        </p>\r\n      ),\r\n      icon: (\r\n        <div className=\"shrink-0 rounded-lg bg-[#C6E3D2] w-12 h-12 flex items-center justify-center border border-[#EDEEF1]\">\r\n          {React.cloneElement(icons.price_tag, {\r\n            fill: \"#378C5A\",\r\n          })}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  return (\r\n    <Container className=\"bg-[#F6F8FA] p-2.5 flex flex-col\">\r\n      <div className=\"flex justify-between\">\r\n        <h1 className=\"capitalize text-dark font-semibold text-lg\">\r\n          Items overview\r\n        </h1>\r\n        <button\r\n          className=\"rounded-lg h-8 flex items-center justify-between p-3 font-semibold text-xs text-gray-600 outline-none border border-gray-300 gap-2.5 capitalize bg-white\"\r\n          onClick={() => setIsOpen(!isOpen)}\r\n        >\r\n          {isOpen ? \"Close\" : \"Open\"}{\" \"}\r\n          <span className=\"rotate-90\">{icons.arrow}</span>\r\n        </button>\r\n      </div>\r\n      <Collapse isOpened={isOpen}>\r\n        <div className=\"flex flex-wrap gap-2.5 mt-3\">\r\n          {kpis.map((kpi, index) => (\r\n            <div\r\n              key={index}\r\n              className={cn(\r\n                \"border rounded-xl border-[#E4E7EC] p-4 flex flex-col relative bg-right-bottom bg-no-repeat flex-auto\",\r\n                index === 0\r\n                  ? \"bg-[#E4EEFA] bg-[url('/assets/images/ecstacy1.svg')]\"\r\n                  : index === 1\r\n                  ? \"bg-[#FAEAE9] bg-[url('/assets/images/ecstacy2.svg')]\"\r\n                  : index === 2\r\n                  ? \"bg-[#EEE9FA] bg-[url('/assets/images/ecstacy3.svg')]\"\r\n                  : index === 3\r\n                  ? \"bg-[#EBF5EF] bg-[url('/assets/images/ecstacy4.svg')]\"\r\n                  : null\r\n              )}\r\n            >\r\n              <div className=\"flex justify-between gap-1\">\r\n                <h1 className=\"text-dark text-sm font-medium\">{kpi.label}</h1>\r\n                <div className=\"shrink-0\">{kpi.icon}</div>\r\n              </div>\r\n\r\n              <div className=\"flex flex-col gap-1\">\r\n                {loading ? (\r\n                  <Skeleton className=\"w-28 h-6 rounded\" />\r\n                ) : (\r\n                  <h1\r\n                    className={cn(\r\n                      \"text-dark font-bold text-[29px] truncate\",\r\n                      index === kpis.length - 1 && profit.value < 0\r\n                        ? \"text-danger\"\r\n                        : null\r\n                    )}\r\n                    title={kpi.count}\r\n                  >\r\n                    {kpi.count}\r\n                  </h1>\r\n                )}\r\n\r\n                <div className=\"text-gray-700 text-sm font-medium \">\r\n                  {kpi.desc}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Collapse>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ItemsOverview;\r\n"]}