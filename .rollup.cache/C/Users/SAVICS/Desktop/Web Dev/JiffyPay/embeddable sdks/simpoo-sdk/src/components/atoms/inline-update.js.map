{"version":3,"file":"inline-update.js","sourceRoot":"","sources":["inline-update.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\r\nimport { icons } from \"../../assets/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"../ui/popover\";\r\nimport Input from \"./input\";\r\nimport { PopoverClose } from \"@radix-ui/react-popover\";\r\nimport Button from \"./button\";\r\nimport { triggerUpdate } from \"../../store/reducers/appSlice\";\r\nimport { useQueryClient } from \"@tanstack/react-query\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { usePostData } from \"../../api/queryHooks\";\r\nimport {\r\n  addCommasToNumber,\r\n  formatToCurrency,\r\n} from \"../../store/actions/utility\";\r\n\r\nfunction InlineUpdate({\r\n  value,\r\n  label,\r\n  placeholder,\r\n  uuid,\r\n  name,\r\n  displayValue,\r\n  valueType,\r\n  item_unit,\r\n}: {\r\n  value: any;\r\n  valueType: \"text\" | \"number\";\r\n  label: string;\r\n  placeholder: string;\r\n  uuid: string;\r\n  name: string;\r\n  displayValue: string;\r\n  item_unit?: string;\r\n}) {\r\n  const { mutate, isPending } = usePostData();\r\n  const dispatch = useDispatch();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const [itemPayload, setItemPayload] = useState({\r\n    item_uuid: uuid,\r\n\r\n    [name]: value,\r\n  });\r\n\r\n  const queryClient = useQueryClient();\r\n  const updateItem = () => {\r\n    mutate(\r\n      { url: \"/outbound/items/update_basic\", payload: itemPayload },\r\n      {\r\n        onSuccess: () => {\r\n          // queryClient.invalidateQueries({ queryKey: [\"items\"] });\r\n          // dispatch(triggerUpdate());\r\n          setPlaceValue(itemPayload[name]);\r\n          setIsOpen(false);\r\n        },\r\n        onError: () => {\r\n          setPlaceValue(\"\");\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  const [placeValue, setPlaceValue] = useState(\"\");\r\n  return (\r\n    <Popover open={isOpen} onOpenChange={setIsOpen}>\r\n      <PopoverTrigger className=\"flex items-center\">\r\n        <button className=\"hover:text-primary  duration-150 underline disabled:no-underline disabled:hover:text-inherit\">\r\n          {placeValue\r\n            ? name === \"selling_price\"\r\n              ? formatToCurrency(+placeValue)\r\n              : addCommasToNumber(+placeValue) + item_unit\r\n            : displayValue}\r\n        </button>\r\n      </PopoverTrigger>\r\n      <PopoverContent\r\n        align=\"center\"\r\n        className=\"shadow-[0_1px_2px_0px_#E4E5E73D,_0_12px_24px_0_#868C981F] space-y-2 bg-white rounded-xl p-3 w-[280px] relative before:absolute before:w-3 before:h-1.5 before:bg-white before:left-1/2 before:-translate-x-1/2 before:rotate-45 data-[side=bottom]:before:top-0 data-[side=top]:before:bottom-0\"\r\n      >\r\n        <Input\r\n          type={valueType}\r\n          value={itemPayload[name]}\r\n          label={label}\r\n          placeholder={placeholder}\r\n          onChange={(e) => {\r\n            setItemPayload((prev) => ({ ...prev, [name]: e.target.value }));\r\n          }}\r\n        />\r\n\r\n        <div className=\"flex justify-end gap-2.5\">\r\n          <PopoverClose>\r\n            <Button\r\n              label=\"Dismiss\"\r\n              className=\"bg-gray-300 text-dark text-sm hover:bg-gray-300/90 font-medium\"\r\n              disabled={isPending}\r\n            />\r\n          </PopoverClose>\r\n          <Button\r\n            label=\"Update\"\r\n            className=\"text-sm font-medium\"\r\n            onClick={updateItem}\r\n            loading={isPending}\r\n          />\r\n        </div>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n}\r\n\r\nexport default InlineUpdate;\r\n"]}