{"version":3,"file":"client.js","sourceRoot":"","sources":["client.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,MAAc,EAAE,EAAE;IAChD,IAAI,CAAC,MAAM,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;IAC5D,CAAC;IAED,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;QACvB,OAAO,EAAE,gDAAgD;QACzD,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,gBAAgB,EAAE,MAAM;SACzB;KACF,CAAC,CAAC;IAEH,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,CAAC,MAAM,EAAE,EAAE;QACT,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;YAC7B,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,MAAM,CAAC;QAC5C,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CACjC,CAAC;IAEF,2DAA2D;IAC3D,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAC3B,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,EACtB,CAAC,KAAK,EAAE,EAAE;QACR,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;YACnB,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC1E,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1D,CAAC;QACD,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC,CACF,CAAC;IAEF,OAAO,GAAG,CAAC;AACb,CAAC,CAAC","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const createApiClient = (apiKey: string) => {\r\n  if (!apiKey) {\r\n    console.warn(\"⚠️ No API key provided to createApiClient\");\r\n  }\r\n\r\n  const api = axios.create({\r\n    baseURL: \"https://biz.api.simpoocodes.com/api/gateway/v1\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"SIMPOO-API-KEY\": apiKey,\r\n    },\r\n  });\r\n\r\n  api.interceptors.request.use(\r\n    (config) => {\r\n      if (apiKey && config.headers) {\r\n        config.headers[\"SIMPOO-API-KEY\"] = apiKey;\r\n      }\r\n      return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n  );\r\n\r\n  // ✅ Add Response Interceptor for Consistent Error Handling\r\n  api.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response) {\r\n        console.error(\"API Error:\", error.response.status, error.response.data);\r\n      } else {\r\n        console.error(\"Network or Axios Error:\", error.message);\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  return api;\r\n};\r\n"]}